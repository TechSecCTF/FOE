Gadgets information
============================================================
0x0000000000400532 : adc byte ptr [rax], ah ; jmp rax
0x000000000040052e : adc dword ptr [rbp - 0x41], ebx ; push rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004006af : add bl, dh ; ret
0x00000000004006ad : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004006ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400631 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000040053c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004006ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040027d : add byte ptr [rax], al ; add byte ptr [rdi + 0x4e], al ; push rbp ; add ch, ch ; ret 0x51d0
0x0000000000400632 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000040046b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400633 : add byte ptr [rax], al ; leave ; ret
0x000000000040053e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040027e : add byte ptr [rax], al ; push rbp ; add ch, ch ; ret 0x51d0
0x00000000004006ae : add byte ptr [rax], al ; ret
0x00000000004005a8 : add byte ptr [rcx], al ; ret
0x000000000040027f : add byte ptr [rdi + 0x4e], al ; push rbp ; add ch, ch ; ret 0x51d0
0x0000000000400283 : add ch, ch ; ret 0x51d0
0x0000000000400634 : add cl, cl ; ret
0x00000000004005a4 : add eax, 0x200aa6 ; add ebx, esi ; ret
0x000000000040027c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; push rbp ; add ch, ch ; ret 0x51d0
0x00000000004005a9 : add ebx, esi ; ret
0x000000000040046e : add esp, 8 ; ret
0x000000000040046d : add rsp, 8 ; ret
0x00000000004005a7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000400689 : call qword ptr [r12 + rbx*8]
0x00000000004007a7 : call qword ptr [rax]
0x000000000040068a : call qword ptr [rsp + rbx*8]
0x00000000004005ce : call rax
0x00000000004005a5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or ah, byte ptr [rax] ; add byte ptr [rcx], al ; ret
0x000000000040068c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400284 : in eax, dx ; ret 0x51d0
0x00000000004005c9 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x000000000040052d : je 0x400548 ; pop rbp ; mov edi, 0x601050 ; jmp rax
0x000000000040057b : je 0x400590 ; pop rbp ; mov edi, 0x601050 ; jmp rax
0x00000000004005c8 : je 0x4005c1 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400535 : jmp rax
0x0000000000400635 : leave ; ret
0x00000000004005a3 : mov byte ptr [rip + 0x200aa6], 1 ; ret
0x0000000000400630 : mov eax, 0 ; leave ; ret
0x00000000004005cc : mov ebp, esp ; call rax
0x0000000000400530 : mov edi, 0x601050 ; jmp rax
0x0000000000400687 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000400686 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004005cb : mov rbp, rsp ; call rax
0x0000000000400538 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004006a8 : nop dword ptr [rax + rax] ; ret
0x0000000000400585 : nop dword ptr [rax] ; pop rbp ; ret
0x00000000004005a6 : or ah, byte ptr [rax] ; add byte ptr [rcx], al ; ret
0x000000000040057c : or ebx, dword ptr [rbp - 0x41] ; push rax ; adc byte ptr [rax], ah ; jmp rax
0x000000000040069c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040069e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004006a0 : pop r14 ; pop r15 ; ret
0x00000000004006a2 : pop r15 ; ret
0x00000000004005a2 : pop rbp ; mov byte ptr [rip + 0x200aa6], 1 ; ret
0x000000000040052f : pop rbp ; mov edi, 0x601050 ; jmp rax
0x000000000040069b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040069f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400540 : pop rbp ; ret
0x00000000004006a3 : pop rdi ; ret
0x00000000004006a1 : pop rsi ; pop r15 ; ret
0x000000000040069d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400531 : push rax ; adc byte ptr [rax], ah ; jmp rax
0x0000000000400282 : push rbp ; add ch, ch ; ret 0x51d0
0x00000000004005ca : push rbp ; mov rbp, rsp ; call rax
0x0000000000400471 : ret
0x0000000000400285 : ret 0x51d0
0x000000000040057a : sal byte ptr [rbx + rcx + 0x5d], 0xbf ; push rax ; adc byte ptr [rax], ah ; jmp rax
0x000000000040052c : sal byte ptr [rcx + rdx + 0x5d], 0xbf ; push rax ; adc byte ptr [rax], ah ; jmp rax
0x00000000004005c7 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x00000000004006b5 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004006b4 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040053a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004006aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004005c6 : test eax, eax ; je 0x4005c3 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004005c5 : test rax, rax ; je 0x4005c4 ; push rbp ; mov rbp, rsp ; call rax

Unique gadgets found: 76
